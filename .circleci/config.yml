version: 2.1

parameters:
  ecr-role:
     type: string
     default: "arn:aws:iam::992382483259:role/fieldeng_aws_ci_oidc_oauth_role"
  environment:
     type: string
     default: "ra-my-app-prod"
  ttl-seconds:
     type: string
     default: "180"
  metadata-endpoint:
     type: string
     default: "http://169.254.169.254/latest/meta-data"
  api-token-endpoint:
     type: string
     default: "http://169.254.169.254/latest/api/token"

commands:
  fetch-instance-metadata:
      steps:
        - when:
            condition:
              or:
               - and:
                   - matches: { pattern: "^ra-[a-z0-9-]+$", value: << pipeline.parameters.environment >> }
            steps:
               - run: echo "this step means it is running on env match!"
        - run:
            name: Fetch Subnet ID from EC2 metadata
            command: |
                TOKEN=$(curl -X PUT "<<pipeline.parameters.api-token-endpoint>>" -H "X-aws-ec2-metadata-token-ttl-seconds: << pipeline.parameters.ttl-seconds >>")
                curl -H "X-aws-ec2-metadata-token: $TOKEN" <<pipeline.parameters.metadata-endpoint>>/network/interfaces/macs/$(curl -H "X-aws-ec2-metadata-token: $TOKEN" <<pipeline.parameters.metadata-endpoint>>/mac)/subnet-id
        - run:
            name: Fetch Instance type from EC2 metadata
            command: |
                TOKEN=$(curl -X PUT "<<pipeline.parameters.api-token-endpoint>>" -H "X-aws-ec2-metadata-token-ttl-seconds: << pipeline.parameters.ttl-seconds >>")
                curl -H "X-aws-ec2-metadata-token: $TOKEN" <<pipeline.parameters.metadata-endpoint>>/instance-type

jobs:
  docker-oidc-remote-docker:
    docker:
      - image: 992382483259.dkr.ecr.us-east-1.amazonaws.com/fieldeng-custom-docker:latest
        aws_auth: 
          oidc_role_arn: <<pipeline.parameters.ecr-role>>
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "hello"
          
  machine-medium:
    machine: true
    resource_class: medium
    steps:
      - checkout
      - fetch-instance-metadata
            

workflows:
  env-match:
    when: 
      condition:
        or:
            - equal: [ main, << pipeline.git.branch >> ]
            - matches: { pattern: "^ra-[a-z0-9-]+$", value: << pipeline.parameters.environment >> }
    jobs:
      - machine-medium
      
  ec2-test:
    when: 
      condition:
        or:
            - equal: [ main, << pipeline.git.branch >> ]
            - matches: { pattern: "^v$", value: << pipeline.git.tag >> }
    jobs:
      - machine-medium
      - docker-oidc-remote-docker
